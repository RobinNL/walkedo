@import "styles/variables";
@import "styles/maps";
@import "styles/functions";

.form-group {
  display: inline-flex;
  flex-direction: column;
}

.formElement {
  padding-bottom: spacing(32);
}

.formWrapper {
  max-width: 480px;
  margin: 0 auto;
}

.checkbox {

}

.formLabel {
  display: block;
  color: color(text);
  margin-bottom: spacing(12);
}

.formField {
  margin-bottom: spacing(20);
}

.formResultErrorWrapper {
  background-color: color(error);
  padding: spacing(12);
  color: color(white);
  border-radius: radius(regular);
  margin-top: spacing(20);
}

/**
Checkmarks
 */


.checkmarkContainer {
  display: block;
  position: relative;
  padding-left: 35px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.checkmarkContainer input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 25px;
  width: 25px;
  background-color: #eee;
}

/* On mouse-over, add a grey background color */
.checkmarkContainer:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.checkmarkContainer input:checked ~ .checkmark {
  background-color: #2196F3;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmarkContainer:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.checkmarkContainer input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.checkmarkContainer .checkmark:after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}